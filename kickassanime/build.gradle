plugins {
    id "com.android.library"
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id "androidx.navigation.safeargs.kotlin"
    id "kotlin-kapt"
    id 'kotlin-parcelize'
}

android {
    compileSdk env.compileSdk

    defaultConfig {
        minSdk env.minSdk
        targetSdk env.targetSdk

        testInstrumentationRunner env.testInstrumentationRunner
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    sourceSets {
        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
        compose true
    }
    hilt {
        enableTransformForLocalTests = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.2"
    }

    namespace 'com.otaku.kickassanime'
}

dependencies {
    implementation project(path: ":base")
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.nav"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.nav"
    implementation "androidx.recyclerview:recyclerview:$versions.recycler_view"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.livedata"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.livedata"
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation "androidx.preference:preference:$versions.preference"
    testImplementation "androidx.paging:paging-common:$versions.paging"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swipe_refresh_layout"
    implementation "com.squareup.retrofit2:converter-gson:$versions.gson_conveter"
    implementation "com.mikepenz:iconics-core:$versions.iconics"
    implementation "com.mikepenz:fontawesome-typeface:$versions.iconics_fontawesome"
    implementation "com.maxkeppeler.sheets:core:$versions.sheets"
    implementation "com.maxkeppeler.sheets:info:$versions.sheets"
    implementation "com.maxkeppeler.sheets:input:$versions.sheets"
    implementation "com.mikepenz:iconics-views:$versions.iconics"
    // paging
    implementation "androidx.paging:paging-runtime:$versions.paging"
    implementation "com.squareup.retrofit2:converter-scalars:$versions.retrofit"

    // OkHttp / Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation(platform("com.squareup.okhttp3:okhttp-bom:$versions.okhttp_bom"))

    implementation "org.threeten:threetenbp:$versions.threetenbp"
    implementation "com.facebook.shimmer:shimmer:$versions.shimmer"
    // Room
    implementation "androidx.room:room-ktx:$versions.room"
    implementation "androidx.room:room-common:$versions.room"
    implementation "androidx.room:room-paging:$versions.room"
    testImplementation project(path: ':base:cloudflarebypass')
    kapt "androidx.room:room-compiler:$versions.room"

    // Hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt"

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0'

    /* tests dependencies */
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_core"
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidx_junit"

    // okhttp
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"

    // hilt
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$versions.hilt"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hilt"

    androidTestImplementation("com.squareup.okhttp3:mockwebserver:$versions.mockwebserver")

    implementation "io.github.lapism:search:$versions.search_lapism"


    // For media playback using ExoPlayer
    implementation "androidx.media3:media3-exoplayer:$versions.media3"
    implementation "androidx.media3:media3-datasource-okhttp:$versions.media3"
    implementation "androidx.media3:media3-ui:$versions.media3"
    implementation "androidx.media3:media3-extractor:$versions.media3"
    implementation "androidx.media3:media3-session:$versions.media3"
    implementation "androidx.media3:media3-cast:$versions.media3"
    implementation "androidx.media3:media3-datasource-cronet:$versions.media3"
    implementation "androidx.media3:media3-exoplayer-hls:$versions.media3"
    implementation "androidx.media3:media3-exoplayer-dash:$versions.media3"
    implementation "com.anggrayudi:materialpreference:$versions.materialpreference"

    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    implementation("androidx.hilt:hilt-work:$versions.work_hilt")
    // When using Kotlin.
    kapt("androidx.hilt:hilt-compiler:$versions.hilt_compiler")
    implementation("com.squareup.okhttp3:logging-interceptor:$versions.okhttp_interceptor")
    implementation 'com.github.mrmike:ok2curl:0.8.0'

    // Jetpack Compose
    def composeBom = platform('androidx.compose:compose-bom:2022.12.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.6.1'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    implementation "androidx.paging:paging-compose:1.0.0-alpha16"
    implementation 'com.valentinilk.shimmer:compose-shimmer:1.0.4'
    implementation "com.github.bumptech.glide:compose:1.0.0-alpha.1"

}