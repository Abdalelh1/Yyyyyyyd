name: Android Build CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branchName }}

      - name: Cache Android SDK
        uses: actions/cache@v2
        with:
          path: ~/.android
          key: ${{ runner.os }}-sdk-${{ hashFiles('**/build.gradle') }}
          restore-keys: ${{ runner.os }}-sdk-

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.1
          parallel: true

      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: load & build apk
        env: 
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_PATH: ${{ github.workspace }}/${{ secrets.KEY_PATH }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          BASE64_STRING: ${{ secrets.KEY_BASE64 }}
        run: |
          echo "${BASE64_STRING}" | base64 --decode > ${KEY_PATH}
          ./gradlew :app:assembleRelease --stacktrace
          rm -f ${KEY_PATH}

      - uses: actions/upload-artifact@v3
        with:
          name: builds
          path: ${{ github.workspace }}/app/build/outputs/apk/release/

      - name: Get Version Info
        id: version
        run: |
          echo "APP_VERSION_NAME=$(grep -w 'versionName' ${{ github.workspace }}/deps.gradle | awk -F: '{printf "%s,", $2}' | tr -d '[:space:,]' | xargs echo')" >> $GITHUB_ENV
    
      - uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: build/reports/
          
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
            repo_token: "${{ secrets.JJ }}"
            automatic_release_tag: "${{ env.APP_VERSION_NAME }}"
            prerelease: false
            title: "${{ env.APP_VERSION_NAME }}"
            files: |
              ${{ github.workspace }}/app/build/output/apk/release/*.apk

