name: Android Build CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branchName }}

      - name: Cache Android SDK
        uses: actions/cache@v2
        with:
          path: ~/.android
          key: ${{ runner.os }}-sdk-${{ hashFiles('**/build.gradle') }}
          restore-keys: ${{ runner.os }}-sdk-

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.1

      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: apk
        env: 
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_PATH: ${{ github.workspace }}/${{ secrets.KEY_PATH }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          BASE64_STRING: ${{ secrets.KEY_BASE64 }}
        run: |
          echo "${BASE64_STRING}" | base64 --decode > ${KEY_PATH}
          ./gradlew :app:assembleRelease --scan
          rm -f ${KEY_PATH}
       
      # attaches the build apks in workflow run page 
      - uses: actions/upload-artifact@v3
        with:
          name: builds
          path: ${{ github.workspace }}/app/build/outputs/apk/release/*.apk
          
      # attaches the build report in workflow run page 
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.workspace }}/build-reports
          path: ${{ github.workspace }}/build/reports/
  
  release:
    name: Release APK
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Get app version
        id: get_version
        uses: eriknyk/android-get-app-version-action@v1.0.1
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: builds
      - name: print file name
        run: |
          cd builds
          ls
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.JJ }}
          APP_VERSION_NAME: ${{ needs.build.outputs.version }}
        with:
          tag_name: '${{ steps.get_version.outputs.versionName }}-${{ steps.get_version.outputs.nextVersionCode }}'
          name: 'Release ${{ steps.get_version.outputs.versionName }}-${{ steps.get_version.outputs.nextVersionCode }}'
          draft: false
          prerelease: false
          files: ${{ github.workspace }}/builds/*.apk
