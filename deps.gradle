ext.versions = [
        paging                   : '3.2.0-alpha05',
        nav                      : '2.5.3',
        leak_canary              : '2.10',
        lifecycle                : '2.5.0-alpha05',
        arch                     : '2.1.0',
        coordinator_layout       : '1.2.0',
        appsearch                : '1.0.0-alpha04',
        hilt                     : '2.46',
        hilt_common              : '1.0.0',
        hilt_compiler            : '1.0.0',
        retrofit                 : '2.9.0',
        room                     : '2.6.0-alpha01',
        core_ktx                 : '1.12.0-alpha04',
        appcompat                : '1.7.0-alpha02',
        material                 : '1.9.0',
        constraintlayout         : '2.1.4',
        junit                    : '4.13.2',
        androidx_junit           : '1.2.0-alpha01',
        espresso_core            : '3.5.1',
        annotation               : '1.4.0',
        glide                    : '4.15.1',
        glide_okhttp             : '4.15.1',
        swipe_refresh_layout     : '1.2.0-alpha01',
        okhttp                   : '5.0.0-alpha.7',
        okhttp_bom               : '5.0.0-alpha.10',
        okhttp_interceptor       : '5.0.0-alpha.10',
        gson_conveter            : '2.9.0',
        threetenbp               : '1.6.8',
        carouselrecyclerview     : '1.2.5',
        palette                  : '1.0.0',
        sheets                   : '2.3.1',
        search_lapism            : '2.0.1',
        iconics                  : '5.4.0',
        iconics_fontawesome      : '5.13.3.0-kotlin@aar',
        work                     : '2.8.1',
        work_hilt                : '1.0.0',
        multidex                 : '2.0.1',
        recycler_view            : '1.3.0',
        livedata                 : '2.6.1',
        preference               : '1.2.0',
        shimmer                  : '0.5.0',
        media3                   : '1.0.1',
        materialpreference       : '3.8.0',
        ok2curl                  : '0.8.0',
        compose_bom              : '2023.05.00',
        compose_activity         : '1.7.1',
        compose_lifecycle        : '2.6.1',
        compose_paging           : '1.0.0-alpha19',
        compose_shimmer          : '1.0.5',
        compose_glide            : '1.0.0-alpha.1',
        compose_material3        : '1.2.0-alpha01',
        compose_vector_animations: '1.5.0-alpha04',
        compose_text_flow        : '1.1.0',
        kotlin_okhttp            : '1.0',
        datastore                : '1.0.0',
        // test
        composeVersion           : "1.1.1",
        assertJ                  : "1.0.1",
        assertJCore              : '3.24.2',
        mockwebserver            : "5.0.0-alpha.10"
]

// region automated versioning system
Properties props = new Properties()
/**
 * will be created by github actions or
 * add manually the following props to version.properties (git ignored)
 * majorVersion=1
 * minorVersion=0
 * patchVersion=0
 * buildNumber=
 * */
def versionFile = project.rootProject.file('version.properties')
if (versionFile.exists()) {
    props.load(versionFile.newDataInputStream())
    props.each { prop ->
        project.ext.set(prop.key, prop.value)
    }
}

private static Integer getVersionCode(ext) {
    int major = ext.majorVersion as Integer
    int minor = ext.minorVersion as Integer
    int patch = ext.patchVersion as Integer

    def version = major * 10000 + minor * 100 + patch
    println("app version code - ${version}")
    return version
}

private static String getVersionName(ext) {
    if (ext.buildNumber) {
        return "${ext.majorVersion}.${ext.minorVersion}.${ext.patchVersion}.${ext.buildNumber}"
    }

    return "${ext.majorVersion}.${ext.minorVersion}.${ext.patchVersion}"
}
// endregion

ext.env = [
        compileSdk               : 33,
        applicationId            : 'com.otaku.fetch',
        minSdk                   : 26,
        targetSdk                : 33,
        versionCode              : getVersionCode(ext),
        versionName              : getVersionName(ext),
        testInstrumentationRunner: "com.otaku.kickassanime.KickassTestRunner",
]


def propertiesFile = project.rootProject.file('local.properties')
/*
 * loading apk signing values securely,
 * the values we are looking for are -
 * KEY_PATH - key file path
 * KEY_PASSWORD
 * STORE_PASSWORD=redC@t33
 * KEY_ALIAS
 * if local props doesn't exists, we will assume this script is running on github action.
 * */
if (propertiesFile.exists()) {
    Properties properties = new Properties()
    properties.load(propertiesFile.newDataInputStream())
    // Looking in local props for signing. This pros file will be absent on github actions.
    properties.each(prop -> {
        System.properties.putIfAbsent(prop.key, prop.value)
    })
} else {
    // github actions will provide environment variables containing apk signing values.
    System.getenv().each(prop -> {
        System.properties.putIfAbsent(prop.key, prop.value)
    })
}
