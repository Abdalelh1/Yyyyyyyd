plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
    id 'dagger.hilt.android.plugin'
}

android {
    signingConfigs {
        release {
        storeFile file('C:\\Users\\snehi\\Documents\\test.jks')
            storePassword 'qwerty123'
            keyAlias 'key0'
            keyPassword 'qwerty123'
        }
    }
    compileSdk env.compileSdk

    defaultConfig {
        applicationId env.applicationId
        minSdk env.minSdk
        targetSdk env.targetSdk
        versionCode env.versionCode
        versionName env.versionName

        testInstrumentationRunner "com.otaku.fetch.FetchTestRunner"
        signingConfig signingConfigs.release
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
    namespace 'com.otaku.fetch'

}

dependencies {
    implementation project(path:":kickassanime")
    implementation project(path:":base")
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation "androidx.navigation:navigation-fragment:$versions.nav"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.nav"
    implementation "androidx.hilt:hilt-work:$versions.work_hilt"
    implementation "androidx.work:work-runtime-ktx:$versions.work"
    androidTestImplementation "io.github.rascaler:assertj:$versions.assertJ"
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidx_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_core"
    // Hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$versions.hilt"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hilt"

    implementation "io.github.lapism:search:$versions.search_lapism"
    // Test
    androidTestImplementation "org.assertj:assertj-core:$versions.assertJCore"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
    implementation "androidx.multidex:multidex:$versions.multidex"

    implementation("androidx.hilt:hilt-work:$versions.work_hilt")
    androidTestImplementation("androidx.work:work-testing:$versions.work")
    // When using Kotlin.
    kapt("androidx.hilt:hilt-compiler:1.0.0")
    implementation "androidx.multidex:multidex:2.0.1"
}